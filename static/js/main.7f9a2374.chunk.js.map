{"version":3,"sources":["components/Navbar.js","components/Countdown.js","hooks/useLongPress.js","components/TimeInput.js","components/SessionTime.js","components/CountdownWrapper.js","components/Main.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Countdown","style","value","type","useLongPress","onClick","onLongPress","ms","fireInterval","timerRef","useRef","eventRef","intervalRef","callback","useCallback","current","setInterval","start","ev","persist","setTimeout","stop","clearInterval","clearTimeout","useMemo","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","TimeInput","label","setTimeValue","useState","val","setVal","longPressMinus","handleMinus","longPressPlus","handlePlus","useEffect","placeholder","min","max","onChange","e","preventDefault","target","length","SessionTime","minutes","seconds","header","CountdownWrapper","counterStatus","classes","Main","sec","workTime","setWorkTime","restTime","setrestTime","setSeconds","setMinutes","isCounting","setIsCounting","intervalId","setIntervalId","setCounterStatus","prevCounterStatus","setPrevCounterStatus","startCountDown","intervalID","console","log","switchToRest","switchToWork","pauseCounting","playButton","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f9a2374.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div className=\"navbar mb-3 bg-neutral text-neutral-content shadow-custom\">\r\n      <div className=\"flex-none px-2 mx-2\">\r\n        <span className=\"text-lg font-bold\">Pomodoro timer</span>\r\n      </div>\r\n      <div className=\"flex-1 px-2 mx-2\">\r\n        <div className=\"items-stretch hidden lg:flex\">\r\n          <span className=\"btn btn-ghost btn-sm rounded-btn\">About</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Countdown(props) {\r\n  const style = {\r\n    \"--value\": props.value,\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col p-2  justify-center bg-neutral rounded-box text-neutral-content\">\r\n      <span className=\"font-mono text-7xl countdown\">\r\n        <span style={style}></span>\r\n      </span>\r\n      {props.type}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Countdown;\r\n","/* Credits:  https://stackoverflow.com/questions/48048957/react-long-press-event */\r\nimport { useCallback, useRef, useMemo } from \"react\";\r\n\r\nexport default function useLongPress({ onClick = () => {}, onLongPress = () => {}, ms = 300, fireInterval = 50 } = {}) {\r\n  const timerRef = useRef(false);\r\n  const eventRef = useRef({});\r\n  const intervalRef = useRef();\r\n\r\n  const callback = useCallback(() => {\r\n    intervalRef.current = setInterval(() => {\r\n      onLongPress(eventRef.current);\r\n    }, fireInterval);\r\n    eventRef.current = {};\r\n    timerRef.current = false;\r\n  }, [onLongPress, fireInterval]);\r\n\r\n  const start = useCallback(\r\n    (ev) => {\r\n      ev.persist();\r\n      eventRef.current = ev;\r\n      timerRef.current = setTimeout(callback, ms);\r\n    },\r\n    [callback, ms]\r\n  );\r\n\r\n  const stop = useCallback(\r\n    (ev) => {\r\n      ev.persist();\r\n      eventRef.current = ev;\r\n      clearInterval(intervalRef.current);\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        clearInterval(intervalRef.current);\r\n        onClick(eventRef.current);\r\n        timerRef.current = false;\r\n        eventRef.current = {};\r\n      }\r\n    },\r\n    [onClick]\r\n  );\r\n\r\n  return useMemo(\r\n    () => ({\r\n      onMouseDown: start,\r\n      onMouseUp: stop,\r\n      onMouseLeave: stop,\r\n      onTouchStart: start,\r\n      onTouchEnd: stop,\r\n    }),\r\n    [start, stop]\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useLongPress from \"../hooks/useLongPress\";\r\n\r\nimport { PlusCircleIcon, MinusCircleIcon } from \"@heroicons/react/outline\";\r\n\r\nfunction TimeInput({ label, value, setTimeValue, type }) {\r\n  let [val, setVal] = useState(value);\r\n  let min = 0;\r\n  let max = 99;\r\n\r\n  const onLongPressPlus = () => {\r\n    handlePlus();\r\n  };\r\n\r\n  const onLongPressMinus = () => {\r\n    handleMinus();\r\n  };\r\n\r\n  const longPressMinus = useLongPress({ onLongPress: onLongPressMinus, onClick: handleMinus, ms: 300 });\r\n  const longPressPlus = useLongPress({ onLongPress: onLongPressPlus, onClick: handlePlus, ms: 300 });\r\n\r\n  function handleMinus() {\r\n    if (val - 1 >= 0) {\r\n      setVal((val) => +val - 1);\r\n    }\r\n  }\r\n\r\n  function handlePlus() {\r\n    if (val <= 98) {\r\n      setVal((val) => +val + 1);\r\n    }\r\n  }\r\n\r\n  function onChange(e) {\r\n    e.preventDefault();\r\n    let val = e.target.value;\r\n    if (val.length < 3) {\r\n      setVal(+e.target.value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    //console.log(\"effect fire\", val);\r\n    if (val < 0) {\r\n      setVal(0);\r\n    } else {\r\n      setTimeValue(type, +val);\r\n    }\r\n  }, [val]);\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label className=\"label justify-center\">\r\n        <span className=\"label-text\">{label}</span>\r\n      </label>\r\n      <div className=\"relative shadow-custom\">\r\n        <button className=\"absolute top-0 left-0 rounded-r-none btn btn-primary px-3\" {...longPressPlus}>\r\n          <PlusCircleIcon className=\"h-6 w-6  text-neutral-content\" />\r\n        </button>\r\n        <input type=\"number\" placeholder={label} className=\"w-40 px-2 text-center input input-primary input-bordered text-base\" value={val} min={min} max={max} onChange={onChange} />\r\n        <button className=\"absolute top-0 right-0 rounded-l-none btn btn-primary px-3\" {...longPressMinus}>\r\n          <MinusCircleIcon className=\"h-6 w-6  text-neutral-content\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeInput;\r\n","import React from \"react\";\r\nimport TimeInput from \"./TimeInput\";\r\n\r\nfunction SessionTime({ type, minutes, seconds, header, setTimeValue }) {\r\n  return (\r\n    <div className=\"bg-white bg-opacity-5 rounded-lg p-md shadow-custom\">\r\n      <h5 className=\"text-center mb-2\">{header}</h5>\r\n      <div className=\"flex flex-wrap gap-y-3 gap-x-5 place-content-center\">\r\n        <TimeInput type={type + \".min\"} label=\"Minutes\" value={minutes} setTimeValue={setTimeValue}></TimeInput>\r\n        <TimeInput type={type + \".sec\"} label=\"Seconds\" value={seconds} setTimeValue={setTimeValue}></TimeInput>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionTime;\r\n","import React from \"react\";\r\nimport Countdown from \"./Countdown\";\r\n\r\nfunction CountdownWrapper({ minutes, seconds, counterStatus }) {\r\n  let classes = \"bg-white bg-opacity-5\";\r\n  if (counterStatus === \"RESTING\") {\r\n    classes = \"bg-primary bg-opacity-40\";\r\n  } else if (counterStatus === \"WORKING\") {\r\n    classes = \"bg-accent bg-opacity-40\";\r\n  }\r\n  return (\r\n    <div className={classes + \" pt-12 pb-6 my-12 rounded-lg  shadow-custom transition duration-1000 \"}>\r\n      <div className=\"grid grid-flow-col gap-5 text-center auto-cols-max justify-center \">\r\n        <Countdown type=\"minutes\" value={minutes}></Countdown>\r\n        <Countdown type=\"seconds\" value={seconds}></Countdown>\r\n      </div>\r\n      <h3 className=\"text-center h3 pt-6\">{counterStatus}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountdownWrapper;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Countdown from \"./Countdown\";\r\nimport TimeInput from \"./TimeInput\";\r\nimport SessionTime from \"./SessionTime\";\r\nimport CountdownWrapper from \"./CountdownWrapper\";\r\n\r\nimport { PauseIcon, PlayIcon, StopIcon } from \"@heroicons/react/outline\";\r\n\r\nfunction Main(props) {\r\n  const [workTime, setWorkTime] = useState({\r\n    min: 25,\r\n    sec: 0,\r\n  });\r\n  const [restTime, setrestTime] = useState({\r\n    min: 5,\r\n    sec: 0,\r\n  });\r\n\r\n  const [seconds, setSeconds] = useState(workTime.sec);\r\n  const [minutes, setMinutes] = useState(workTime.min);\r\n  const [isCounting, setIsCounting] = useState(false);\r\n  const [intervalId, setIntervalId] = useState(0);\r\n  const [counterStatus, setCounterStatus] = useState(\"RESETED\");\r\n  const [prevCounterStatus, setPrevCounterStatus] = useState(\"WORKING\");\r\n\r\n  const toggleCount = () => {\r\n    if (isCounting) {\r\n      pauseCounting();\r\n      setCounterStatus(\"PAUSED\");\r\n      return;\r\n    }\r\n    startCountDown();\r\n  };\r\n\r\n  function setTimeValue(type, val) {\r\n    switch (type) {\r\n      case \"work.min\":\r\n        setWorkTime({ ...workTime, min: val });\r\n        if (!isCounting) setMinutes(val);\r\n        break;\r\n\r\n      case \"work.sec\":\r\n        setWorkTime({ ...workTime, sec: val });\r\n        if (!isCounting) setSeconds(val);\r\n        break;\r\n\r\n      case \"rest.min\":\r\n        setrestTime({ ...restTime, min: val });\r\n        break;\r\n\r\n      case \"rest.sec\":\r\n        setrestTime({ ...restTime, sec: val });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const startCountDown = () => {\r\n    setSeconds((seconds) => seconds - 1);\r\n    setIsCounting(true);\r\n    setCounterStatus(prevCounterStatus);\r\n    const intervalID = setInterval(() => {\r\n      setSeconds((seconds) => seconds - 1);\r\n    }, 1000);\r\n    setIntervalId(intervalID);\r\n  };\r\n\r\n  /* Watching for seconds changes */\r\n  useEffect(() => {\r\n    console.log(minutes, \":\", seconds);\r\n    if (seconds === -1 && minutes !== 0) {\r\n      setMinutes((minutes) => minutes - 1);\r\n      setSeconds(59);\r\n    } else if (seconds === -1 && minutes === 0) {\r\n      console.log(\"Switch status\");\r\n      if (counterStatus === \"WORKING\") {\r\n        switchToRest();\r\n      } else if (counterStatus === \"RESTING\") {\r\n        switchToWork();\r\n      }\r\n    }\r\n  }, [seconds]);\r\n\r\n  const pauseCounting = () => {\r\n    setIsCounting(false);\r\n    if (intervalId) {\r\n      clearInterval(intervalId);\r\n      setIntervalId(0);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const resetCountdown = () => {\r\n    pauseCounting();\r\n    setCounterStatus(\"RESETED\");\r\n    setPrevCounterStatus(\"WORKING\");\r\n    setSeconds(workTime.sec);\r\n    setMinutes(workTime.min);\r\n  };\r\n\r\n  const switchToWork = () => {\r\n    setPrevCounterStatus(\"WORKING\");\r\n    setCounterStatus(\"WORKING\");\r\n    setMinutes(workTime.min);\r\n    setSeconds(workTime.sec);\r\n  };\r\n\r\n  const switchToRest = () => {\r\n    setPrevCounterStatus(\"RESTING\");\r\n    setCounterStatus(\"RESTING\");\r\n    setMinutes(restTime.min);\r\n    setSeconds(restTime.sec);\r\n  };\r\n\r\n  let playButton = (\r\n    <>\r\n      <PlayIcon className=\"h-6 w-6 mr-2\" /> Start\r\n    </>\r\n  );\r\n\r\n  if (!isCounting && counterStatus === \"PAUSED\") {\r\n    playButton = (\r\n      <>\r\n        <PlayIcon className=\"h-6 w-6 mr-2\" /> Resume\r\n      </>\r\n    );\r\n  } else if (isCounting) {\r\n    playButton = (\r\n      <>\r\n        <PauseIcon className=\"h-6 w-6 mr-2\" /> Pause\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"sm:place-self-center\">\r\n      <div className=\"flex gap-5 md:gap-16 justify-items-end\">\r\n        <SessionTime header=\"Working session length\" type=\"work\" minutes={workTime.min} seconds={workTime.sec} setTimeValue={setTimeValue} />\r\n        <SessionTime header=\"Resting session length\" type=\"rest\" minutes={workTime.min} seconds={workTime.sec} setTimeValue={setTimeValue} />\r\n      </div>\r\n      <CountdownWrapper minutes={minutes} seconds={seconds} counterStatus={counterStatus} />\r\n      <div className=\"flex p-4 gap-5 place-content-center justify-center\">\r\n        <button className=\"btn btn-lg btn-primary shadow-button\" onClick={toggleCount}>\r\n          {playButton}\r\n        </button>\r\n        <button className=\"btn btn-lg btn-accent shadow-button\" onClick={resetCountdown}>\r\n          <StopIcon className=\"h-6 w-6 mr-2\" />\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className=\"p-2 footer bg-base-300 text-base-content footer-center text-xs\">\r\n      <div>\r\n        <p>Copyright © 2021 - All right reserved</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Navbar from \"./components/Navbar\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}