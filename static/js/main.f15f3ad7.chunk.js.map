{"version":3,"sources":["components/Navbar.js","components/Countdown.js","components/TimeInput.js","components/Main.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Countdown","style","value","type","TimeInput","label","placeholder","Main","initValues","useState","seconds","setSeconds","minutes","setMinutes","isCounting","setIsCounting","intervalId","setIntervalId","startCountDown","intervalID","setInterval","useEffect","console","log","pauseCounting","clearInterval","pauseButton","playButton","onClick","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f15f3ad7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div className=\"navbar mb-3 shadow-lg bg-neutral text-neutral-content \">\r\n      <div className=\"flex-none px-2 mx-2\">\r\n        <span className=\"text-lg font-bold\">Pomodoro timer</span>\r\n      </div>\r\n      <div className=\"flex-1 px-2 mx-2\">\r\n        <div className=\"items-stretch hidden lg:flex\">\r\n          <span className=\"btn btn-ghost btn-sm rounded-btn\">About</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Countdown(props) {\r\n  const style = {\r\n    \"--value\": props.value,\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col p-2  justify-center bg-neutral rounded-box text-neutral-content\">\r\n      <span className=\"font-mono text-7xl countdown\">\r\n        <span style={style}></span>\r\n      </span>\r\n      {props.type}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Countdown;\r\n","import React from \"react\";\r\nimport { PlusCircleIcon, MinusCircleIcon } from \"@heroicons/react/outline\";\r\n\r\nfunction TimeInput(props) {\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label className=\"label justify-center\">\r\n        <span className=\"label-text\">{props.label}</span>\r\n      </label>\r\n      <div className=\"relative\">\r\n        <button className=\"absolute top-0 left-0 rounded-r-none btn btn-primary px-3\">\r\n          <PlusCircleIcon className=\"h-6 w-6  text-neutral-content\" />\r\n        </button>\r\n        <input type=\"text\" placeholder={props.label} className=\"w-full px-2 text-center input input-primary input-bordered\" />\r\n        <button className=\"absolute top-0 right-0 rounded-l-none btn btn-primary px-3\">\r\n          <MinusCircleIcon className=\"h-6 w-6  text-neutral-content\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Countdown from \"./Countdown\";\r\nimport TimeInput from \"./TimeInput\";\r\n\r\nimport { PauseIcon, PlayIcon, StopIcon } from \"@heroicons/react/outline\";\r\n\r\nfunction Main(props) {\r\n  let initValues = {\r\n    sec: 0,\r\n    min: 25,\r\n  };\r\n  const [seconds, setSeconds] = useState(initValues.sec);\r\n  const [minutes, setMinutes] = useState(initValues.min);\r\n  //const [mils, setMils] = useState(0);\r\n  const [isCounting, setIsCounting] = useState(false);\r\n\r\n  const [intervalId, setIntervalId] = useState(0);\r\n\r\n  const toggleCount = () => {\r\n    if (isCounting) {\r\n      pauseCounting();\r\n      return;\r\n    }\r\n    startCountDown();\r\n  };\r\n\r\n  const startCountDown = () => {\r\n    if (!isCounting) {\r\n      setSeconds((seconds) => seconds - 1);\r\n      setIsCounting(true);\r\n      const intervalID = setInterval(() => {\r\n        setSeconds((seconds) => seconds - 1);\r\n      }, 1000);\r\n      setIntervalId(intervalID);\r\n    }\r\n  };\r\n\r\n  /* Watching for seconds changes */\r\n  useEffect(() => {\r\n    if (seconds === -1) {\r\n      console.log(\"zero sec\");\r\n      setMinutes((minutes) => minutes - 1);\r\n      setSeconds(59);\r\n    }\r\n  }, [seconds]);\r\n\r\n  const pauseCounting = () => {\r\n    setIsCounting(false);\r\n    if (intervalId) {\r\n      clearInterval(intervalId);\r\n      setIntervalId(0);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const resetCountdown = () => {\r\n    pauseCounting();\r\n    setSeconds(initValues.sec);\r\n    setMinutes(initValues.min);\r\n  };\r\n\r\n  let pauseButton = (\r\n    <>\r\n      <PauseIcon className=\"h-6 w-6 mr-2\" /> Pause\r\n    </>\r\n  );\r\n\r\n  let playButton = (\r\n    <>\r\n      <PlayIcon className=\"h-6 w-6 mr-2\" /> Play\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"sm:place-self-center\">\r\n      <div className=\"flex flex-wrap gap-5 p-4 m-4 place-content-center\">\r\n        <TimeInput type=\"minutes\" label=\"Minutes\"></TimeInput>\r\n        <TimeInput type=\"seconds\" label=\"Seconds\"></TimeInput>\r\n      </div>\r\n\r\n      <div className=\"grid grid-flow-col gap-5 text-center auto-cols-max justify-center  bg-white bg-opacity-5 py-12 my-12 rounded-lg\">\r\n        <Countdown type=\"minutes\" value={minutes}></Countdown>\r\n        <Countdown type=\"seconds\" value={seconds}></Countdown>\r\n      </div>\r\n      <div className=\"flex p-4 gap-5 place-content-center justify-center\">\r\n        <button className=\"btn btn-lg btn-primary\" onClick={toggleCount}>\r\n          {isCounting ? pauseButton : playButton}\r\n        </button>\r\n        <button className=\"btn btn-lg btn-accent\" onClick={resetCountdown}>\r\n          <StopIcon className=\"h-6 w-6 mr-2\" />\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className=\"p-4 footer bg-base-300 text-base-content footer-center\">\r\n      <div>\r\n        <p>Copyright Â© 2021 - All right reserved</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Navbar from \"./components/Navbar\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}