{"version":3,"sources":["components/Navbar.js","components/Countdown.js","hooks/useLongPress.js","components/TimeInput.js","components/Main.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Countdown","style","value","type","useLongPress","onClick","onLongPress","ms","fireInterval","timerRef","useRef","eventRef","intervalRef","callback","useCallback","current","setInterval","console","log","start","ev","persist","setTimeout","stop","clearInterval","clearTimeout","useMemo","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","TimeInput","label","setTimeValue","useState","val","setVal","longPressMinus","handleMinus","longPressPlus","handlePlus","useEffect","placeholder","min","max","onChange","e","preventDefault","target","length","Main","initValues","work","sec","break","seconds","setSeconds","minutes","setMinutes","isCounting","setIsCounting","counterStatus","setCounterStatus","intervalId","setIntervalId","path","split","startCountDown","intervalID","pauseCounting","playButton","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAiBeA,MAff,SAAgBC,GACd,OACE,sBAAKC,UAAU,yDAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,oBAAhB,8BAEF,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,sBAAMA,UAAU,mCAAhB,2B,OCOKC,MAff,SAAmBF,GACjB,IAAMG,EAAQ,CACZ,UAAWH,EAAMI,OAGnB,OACE,sBAAKH,UAAU,gFAAf,UACE,sBAAMA,UAAU,+BAAhB,SACE,sBAAME,MAAOA,MAEdH,EAAMK,S,OCTE,SAASC,IAAgG,IAAD,yDAAJ,GAAI,IAAhFC,eAAgF,MAAtE,aAAsE,MAA5DC,mBAA4D,MAA9C,aAA8C,MAApCC,UAAoC,MAA/B,IAA+B,MAA1BC,oBAA0B,MAAX,GAAW,EAC/GC,EAAWC,kBAAO,GAClBC,EAAWD,iBAAO,IAClBE,EAAcF,mBAEdG,EAAWC,uBAAY,WAC3BF,EAAYG,QAAUC,aAAY,WAChCV,EAAYK,EAASI,WACpBP,GACHS,QAAQC,IAAI,YACZP,EAASI,QAAU,GACnBN,EAASM,SAAU,IAClB,CAACT,IAEEa,EAAQL,uBACZ,SAACM,GACCA,EAAGC,UACHV,EAASI,QAAUK,EACnBX,EAASM,QAAUO,WAAWT,EAAUN,KAE1C,CAACM,EAAUN,IAGPgB,EAAOT,uBACX,SAACM,GACCA,EAAGC,UACHV,EAASI,QAAUK,EACnBI,cAAcZ,EAAYG,SACtBN,EAASM,UACXU,aAAahB,EAASM,SACtBS,cAAcZ,EAAYG,SAC1BV,EAAQM,EAASI,SACjBN,EAASM,SAAU,EACnBJ,EAASI,QAAU,MAGvB,CAACV,IAGH,OAAOqB,mBACL,iBAAO,CACLC,YAAaR,EACbS,UAAWL,EACXM,aAAcN,EACdO,aAAcX,EACdY,WAAYR,KAEd,CAACJ,EAAOI,I,WCmBGS,MAhEf,YAA0D,IAArCC,EAAoC,EAApCA,MAAO/B,EAA6B,EAA7BA,MAAOgC,EAAsB,EAAtBA,aAAc/B,EAAQ,EAARA,KAC/C,EAAoBgC,mBAASjC,GAA7B,mBAAKkC,EAAL,KAAUC,EAAV,KAYMC,EAAiBlC,EAAa,CAAEE,YAJb,WACvBiC,KAGmElC,QAASkC,EAAahC,GAAI,MACzFiC,EAAgBpC,EAAa,CAAEE,YATb,WACtBmC,KAQiEpC,QAASoC,EAAYlC,GAAI,MAE5F,SAASgC,IACHH,EAAM,GAAK,GACbC,GAAO,SAACD,GAAD,OAAUA,EAAM,KAI3B,SAASK,IACHL,GAAO,IACTC,GAAO,SAACD,GAAD,OAAUA,EAAM,KAsB3B,OATAM,qBAAU,WACRzB,QAAQC,IAAI,cAAekB,GACvBA,EAAM,EACRC,EAAO,GAEPH,EAAa/B,EAAMiC,KAEpB,CAACA,IAGF,sBAAKrC,UAAU,eAAf,UACE,uBAAOA,UAAU,uBAAjB,SACE,sBAAMA,UAAU,aAAhB,SAA8BkC,MAEhC,sBAAKlC,UAAU,WAAf,UACE,gDAAQA,UAAU,6DAAgEyC,GAAlF,aACE,cAAC,IAAD,CAAgBzC,UAAU,qCAE5B,uBAAOI,KAAK,SAASwC,YAAaV,EAAOlC,UAAU,qEAAqEG,MAAOkC,EAAKQ,IArDhI,EAqD0IC,IApD1I,GAoDoJC,SA3B9J,SAAkBC,GAChBA,EAAEC,iBACF,IAAIZ,EAAMW,EAAEE,OAAO/C,MACnBe,QAAQC,IAAI6B,GACRX,EAAIc,OAAS,GACfb,EAAOU,EAAEE,OAAO/C,UAuBd,gDAAQH,UAAU,8DAAiEuC,GAAnF,aACE,cAAC,IAAD,CAAiBvC,UAAU,4CC2EtBoD,MAnIf,SAAcrD,GACZ,IAAIsD,EAAa,CACfC,KAAM,CACJC,IAAK,EACLV,IAAK,IAEPW,MAAO,CACLD,IAAK,EACLV,IAAK,IAIT,EAA8BT,mBAASiB,EAAWC,KAAKC,KAAvD,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA8BtB,mBAASiB,EAAWC,KAAKT,KAAvD,mBAAOc,EAAP,KAAgBC,EAAhB,KAEA,EAAoCxB,oBAAS,GAA7C,mBAAOyB,EAAP,KAAmBC,EAAnB,KACA,EAA0C1B,mBAAS,WAAnD,mBAAO2B,EAAP,KAAsBC,EAAtB,KAEA,EAAoC5B,mBAAS,GAA7C,mBAAO6B,EAAP,KAAmBC,EAAnB,KAWA,SAAS/B,EAAa/B,EAAMiC,GAC1B,IAAI8B,EAAO/D,EAAKgE,MAAM,KACtBf,EAAWc,EAAK,IAAIA,EAAK,IAAM9B,EAC1BwB,GAA0B,SAAZM,EAAK,KACN,QAAZA,EAAK,GACPP,EAAWvB,GAEXqB,EAAWrB,IAKjB,IAAMgC,EAAiB,WACrBX,GAAW,SAACD,GAAD,OAAaA,EAAU,KAClCK,GAAc,GACdE,EAAiB,WACjB,IAAMM,EAAarD,aAAY,WAC7ByC,GAAW,SAACD,GAAD,OAAaA,EAAU,OACjC,KACHS,EAAcI,IAIhB3B,qBAAU,YACS,IAAbc,IACFvC,QAAQC,IAAI,YACZyC,GAAW,SAACD,GAAD,OAAaA,EAAU,KAClCD,EAAW,OAEZ,CAACD,IAEJ,IAAMc,EAAgB,WAEpB,GADAT,GAAc,GACVG,EAGF,OAFAxC,cAAcwC,QACdC,EAAc,IAYdM,EACF,qCACE,cAAC,IAAD,CAAUxE,UAAU,iBADtB,YAmBF,OAdK6D,GAAgC,WAAlBE,EAMRF,IACTW,EACE,qCACE,cAAC,IAAD,CAAWxE,UAAU,iBADvB,aAPFwE,EACE,qCACE,cAAC,IAAD,CAAUxE,UAAU,iBADtB,aAaF,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,eAAd,0BACA,sBAAKA,UAAU,sDAAf,UACE,cAAC,EAAD,CAAWI,KAAK,WAAW8B,MAAM,UAAU/B,MAAOkD,EAAWC,KAAKT,IAAKV,aAAcA,IACrF,cAAC,EAAD,CAAW/B,KAAK,WAAW8B,MAAM,UAAU/B,MAAOkD,EAAWC,KAAKC,IAAKpB,aAAcA,OAGvF,oBAAInC,UAAU,cAAd,wBACA,sBAAKA,UAAU,sDAAf,UACE,cAAC,EAAD,CAAWI,KAAK,YAAY8B,MAAM,UAAU/B,MAAOkD,EAAWG,MAAMX,IAAKV,aAAcA,IACvF,cAAC,EAAD,CAAW/B,KAAK,YAAY8B,MAAM,UAAU/B,MAAOkD,EAAWG,MAAMD,IAAKpB,aAAcA,OAGzF,sBAAKnC,UAAU,qDAAf,UACE,sBAAKA,UAAU,qEAAf,UACE,cAAC,EAAD,CAAWI,KAAK,UAAUD,MAAOwD,IACjC,cAAC,EAAD,CAAWvD,KAAK,UAAUD,MAAOsD,OAEnC,oBAAIzD,UAAU,sBAAd,SAAqC+D,OAGvC,sBAAK/D,UAAU,qDAAf,UACE,wBAAQA,UAAU,yBAAyBM,QAnG7B,WAClB,GAAIuD,EAGF,OAFAU,SACAP,EAAiB,UAGnBK,KA6FI,SACGG,IAEH,yBAAQxE,UAAU,wBAAwBM,QArDzB,WACrBiE,IACAP,EAAiB,WACjBN,EAAWL,EAAWC,KAAKC,KAC3BK,EAAWP,EAAWC,KAAKT,MAiDvB,UACE,cAAC,IAAD,CAAU7C,UAAU,iBADtB,kBCpHOyE,MAVf,SAAgB1E,GACd,OACE,wBAAQC,UAAU,yDAAlB,SACE,8BACE,8ECQO0E,MAVf,WACE,OACE,sBAAK1E,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGS2E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1ca7c69.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div className=\"navbar mb-3 shadow-lg bg-neutral text-neutral-content \">\r\n      <div className=\"flex-none px-2 mx-2\">\r\n        <span className=\"text-lg font-bold\">Pomodoro timer</span>\r\n      </div>\r\n      <div className=\"flex-1 px-2 mx-2\">\r\n        <div className=\"items-stretch hidden lg:flex\">\r\n          <span className=\"btn btn-ghost btn-sm rounded-btn\">About</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Countdown(props) {\r\n  const style = {\r\n    \"--value\": props.value,\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col p-2  justify-center bg-neutral rounded-box text-neutral-content\">\r\n      <span className=\"font-mono text-7xl countdown\">\r\n        <span style={style}></span>\r\n      </span>\r\n      {props.type}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Countdown;\r\n","/* Credits:  https://stackoverflow.com/questions/48048957/react-long-press-event */\r\nimport { useCallback, useRef, useMemo } from \"react\";\r\n\r\nexport default function useLongPress({ onClick = () => {}, onLongPress = () => {}, ms = 300, fireInterval = 50 } = {}) {\r\n  const timerRef = useRef(false);\r\n  const eventRef = useRef({});\r\n  const intervalRef = useRef();\r\n\r\n  const callback = useCallback(() => {\r\n    intervalRef.current = setInterval(() => {\r\n      onLongPress(eventRef.current);\r\n    }, fireInterval);\r\n    console.log(\"callback\");\r\n    eventRef.current = {};\r\n    timerRef.current = false;\r\n  }, [onLongPress]);\r\n\r\n  const start = useCallback(\r\n    (ev) => {\r\n      ev.persist();\r\n      eventRef.current = ev;\r\n      timerRef.current = setTimeout(callback, ms);\r\n    },\r\n    [callback, ms]\r\n  );\r\n\r\n  const stop = useCallback(\r\n    (ev) => {\r\n      ev.persist();\r\n      eventRef.current = ev;\r\n      clearInterval(intervalRef.current);\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        clearInterval(intervalRef.current);\r\n        onClick(eventRef.current);\r\n        timerRef.current = false;\r\n        eventRef.current = {};\r\n      }\r\n    },\r\n    [onClick]\r\n  );\r\n\r\n  return useMemo(\r\n    () => ({\r\n      onMouseDown: start,\r\n      onMouseUp: stop,\r\n      onMouseLeave: stop,\r\n      onTouchStart: start,\r\n      onTouchEnd: stop,\r\n    }),\r\n    [start, stop]\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useLongPress from \"../hooks/useLongPress\";\r\n\r\nimport { PlusCircleIcon, MinusCircleIcon } from \"@heroicons/react/outline\";\r\n\r\nfunction TimeInput({ label, value, setTimeValue, type }) {\r\n  let [val, setVal] = useState(value);\r\n  let min = 0;\r\n  let max = 99;\r\n\r\n  const onLongPressPlus = () => {\r\n    handlePlus();\r\n  };\r\n\r\n  const onLongPressMinus = () => {\r\n    handleMinus();\r\n  };\r\n\r\n  const longPressMinus = useLongPress({ onLongPress: onLongPressMinus, onClick: handleMinus, ms: 300 });\r\n  const longPressPlus = useLongPress({ onLongPress: onLongPressPlus, onClick: handlePlus, ms: 300 });\r\n\r\n  function handleMinus() {\r\n    if (val - 1 >= 0) {\r\n      setVal((val) => +val - 1);\r\n    }\r\n  }\r\n\r\n  function handlePlus() {\r\n    if (val <= 98) {\r\n      setVal((val) => +val + 1);\r\n    }\r\n  }\r\n\r\n  function onChange(e) {\r\n    e.preventDefault();\r\n    let val = e.target.value;\r\n    console.log(e);\r\n    if (val.length < 3) {\r\n      setVal(e.target.value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"effect fire\", val);\r\n    if (val < 0) {\r\n      setVal(0);\r\n    } else {\r\n      setTimeValue(type, val);\r\n    }\r\n  }, [val]);\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label className=\"label justify-center\">\r\n        <span className=\"label-text\">{label}</span>\r\n      </label>\r\n      <div className=\"relative\">\r\n        <button className=\"absolute top-0 left-0 rounded-r-none btn btn-primary px-3\" {...longPressPlus}>\r\n          <PlusCircleIcon className=\"h-6 w-6  text-neutral-content\" />\r\n        </button>\r\n        <input type=\"number\" placeholder={label} className=\"w-40 px-2 text-center input input-primary input-bordered text-base\" value={val} min={min} max={max} onChange={onChange} />\r\n        <button className=\"absolute top-0 right-0 rounded-l-none btn btn-primary px-3\" {...longPressMinus}>\r\n          <MinusCircleIcon className=\"h-6 w-6  text-neutral-content\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Countdown from \"./Countdown\";\r\nimport TimeInput from \"./TimeInput\";\r\n\r\nimport { PauseIcon, PlayIcon, StopIcon } from \"@heroicons/react/outline\";\r\n\r\nfunction Main(props) {\r\n  let initValues = {\r\n    work: {\r\n      sec: 0,\r\n      min: 25,\r\n    },\r\n    break: {\r\n      sec: 0,\r\n      min: 5,\r\n    },\r\n  };\r\n\r\n  const [seconds, setSeconds] = useState(initValues.work.sec);\r\n  const [minutes, setMinutes] = useState(initValues.work.min);\r\n\r\n  const [isCounting, setIsCounting] = useState(false);\r\n  const [counterStatus, setCounterStatus] = useState(\"RESETED\");\r\n\r\n  const [intervalId, setIntervalId] = useState(0);\r\n\r\n  const toggleCount = () => {\r\n    if (isCounting) {\r\n      pauseCounting();\r\n      setCounterStatus(\"PAUSED\");\r\n      return;\r\n    }\r\n    startCountDown();\r\n  };\r\n\r\n  function setTimeValue(type, val) {\r\n    let path = type.split(\".\");\r\n    initValues[path[0]][path[1]] = val;\r\n    if (!isCounting && path[0] === \"work\") {\r\n      if (path[1] === \"min\") {\r\n        setMinutes(val);\r\n      } else {\r\n        setSeconds(val);\r\n      }\r\n    }\r\n  }\r\n\r\n  const startCountDown = () => {\r\n    setSeconds((seconds) => seconds - 1);\r\n    setIsCounting(true);\r\n    setCounterStatus(\"WORKING\");\r\n    const intervalID = setInterval(() => {\r\n      setSeconds((seconds) => seconds - 1);\r\n    }, 1000);\r\n    setIntervalId(intervalID);\r\n  };\r\n\r\n  /* Watching for seconds changes */\r\n  useEffect(() => {\r\n    if (seconds === -1) {\r\n      console.log(\"zero sec\");\r\n      setMinutes((minutes) => minutes - 1);\r\n      setSeconds(59);\r\n    }\r\n  }, [seconds]);\r\n\r\n  const pauseCounting = () => {\r\n    setIsCounting(false);\r\n    if (intervalId) {\r\n      clearInterval(intervalId);\r\n      setIntervalId(0);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const resetCountdown = () => {\r\n    pauseCounting();\r\n    setCounterStatus(\"RESETED\");\r\n    setSeconds(initValues.work.sec);\r\n    setMinutes(initValues.work.min);\r\n  };\r\n\r\n  let playButton = (\r\n    <>\r\n      <PlayIcon className=\"h-6 w-6 mr-2\" /> Start\r\n    </>\r\n  );\r\n\r\n  if (!isCounting && counterStatus === \"PAUSED\") {\r\n    playButton = (\r\n      <>\r\n        <PlayIcon className=\"h-6 w-6 mr-2\" /> Resume\r\n      </>\r\n    );\r\n  } else if (isCounting) {\r\n    playButton = (\r\n      <>\r\n        <PauseIcon className=\"h-6 w-6 mr-2\" /> Pause\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"sm:place-self-center\">\r\n      <h4 className=\"text-center \">Working time</h4>\r\n      <div className=\"flex flex-wrap gap-5 pb-4 mb-4 place-content-center\">\r\n        <TimeInput type=\"work.min\" label=\"Minutes\" value={initValues.work.min} setTimeValue={setTimeValue}></TimeInput>\r\n        <TimeInput type=\"work.sec\" label=\"Seconds\" value={initValues.work.sec} setTimeValue={setTimeValue}></TimeInput>\r\n      </div>\r\n\r\n      <h4 className=\"text-center\">Break time</h4>\r\n      <div className=\"flex flex-wrap gap-5 pb-4 mb-4 place-content-center\">\r\n        <TimeInput type=\"break.min\" label=\"Minutes\" value={initValues.break.min} setTimeValue={setTimeValue}></TimeInput>\r\n        <TimeInput type=\"break.sec\" label=\"Seconds\" value={initValues.break.sec} setTimeValue={setTimeValue}></TimeInput>\r\n      </div>\r\n\r\n      <div className=\" bg-white bg-opacity-5 pt-12 pb-6 my-12 rounded-lg\">\r\n        <div className=\"grid grid-flow-col gap-5 text-center auto-cols-max justify-center \">\r\n          <Countdown type=\"minutes\" value={minutes}></Countdown>\r\n          <Countdown type=\"seconds\" value={seconds}></Countdown>\r\n        </div>\r\n        <h3 className=\"text-center h3 pt-6\">{counterStatus}</h3>\r\n      </div>\r\n\r\n      <div className=\"flex p-4 gap-5 place-content-center justify-center\">\r\n        <button className=\"btn btn-lg btn-primary\" onClick={toggleCount}>\r\n          {playButton}\r\n        </button>\r\n        <button className=\"btn btn-lg btn-accent\" onClick={resetCountdown}>\r\n          <StopIcon className=\"h-6 w-6 mr-2\" />\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className=\"p-4 footer bg-base-300 text-base-content footer-center\">\r\n      <div>\r\n        <p>Copyright © 2021 - All right reserved</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Navbar from \"./components/Navbar\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}